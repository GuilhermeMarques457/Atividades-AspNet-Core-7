@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "People List";
}
<a href="~/persons/create">Create Person</a>

<form action="~/persons/index" method="get">
    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (var field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.CurrentSearchBy)
                    {
                        <option selected="selected" value="@field.Key">@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }
               
                }
            </select>
       
        
        </div>

        <div class="flex-1">
            <input type="search" value="@ViewBag.CurrentSearchString" id="Search" name="searchString" class="form-input" placeholder="Search"/>
        </div>

        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a href="~/persons/index">Clear all</a>
        </div>
    </div>

    <table class="table w-100">
        <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.PersonName)},
                    {"DisplayName", "Person Name"},
                })
                
                 @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.PersonEmail)},
                    {"DisplayName", "Person Email"},
                })

                 @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                    {"DisplayName", "Date of Birth"},
                })
                
                 @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.PersonAge)},
                    {"DisplayName", "Person Age"},
                })

                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.PersonGender)},
                    {"DisplayName", "Person Gender"},
                })

                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.CountryName)},
                    {"DisplayName", "Country"},
                })

                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.PersonAddress)},
                    {"DisplayName", "Person Address"},
                })

                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters)},
                    {"DisplayName", "Receive News Letters"},
                })

            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td style="width: 15%">@item.PersonName</td>
                    <td style="width: 15%">@item.PersonEmail</td>
                    <td style="width: 12%">@item.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td style="width: 8%">@item.PersonAge</td>
                    <td style="width: 10%">@item.PersonGender</td>
                    <td style="width: 12%">@item.CountryName</td>
                    <td style="width: 15%">@item.PersonAddress</td>
                    <td style="width: 15%">@item.ReceiveNewsLetters</td>
                </tr>
            }
        </tbody>
    
    </table>

</form>
